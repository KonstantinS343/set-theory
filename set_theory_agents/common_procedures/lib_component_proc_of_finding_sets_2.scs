lib_component_proc_of_finding_sets_2
=> nrel_main_idtf:
	[Компонент библиотеки. scp-программа нахождения узлов множеств по связке отношения для входных множеств с атрибутами]
	(* <- lang_ru;; *);
	[Library component. scp-finding program sets of nodes conjunction relationship attrib]
	(* <- lang_en;; *);

<- platform_independent_reusable_component_OSTIS;
<- reusable_scp_program;

-> rrel_key_sc_element: 
	proc_search_of_sets_new_2;;

lib_component_proc_of_finding_sets_2 = [*
scp_program -> proc_search_of_sets_new_2 (*
    -> rrel_params: ... (*

    	// первое множество
        -> rrel_1: rrel_in: rrel_fixed: rrel_scp_var: _setFirst;;
        
        // второе множество
        -> rrel_2: rrel_in: rrel_fixed: rrel_scp_var: _setSecond;;
        
        // узел ответа
        -> rrel_3: rrel_in: rrel_fixed: rrel_scp_var: _result;;
        
        // узел отношения
        -> rrel_4: rrel_in: rrel_fixed: rrel_scp_var: _nrel;;
        
        // результат выполнения теор. множ. операции
        -> rrel_5: rrel_out: rrel_assign: rrel_scp_var: _set3;;
    *);;

    -> rrel_operators: ... (*
        
        ->rrel_init: _proc_search_of_sets_new_2_operator0 (*
            <- printNl;;
            -> rrel_1: rrel_fixed: rrel_scp_const: [процедура нахождения узлов множества с заданными атрибутами];;
            => nrel_goto: _proc_search_of_sets_new_2_operator01;;
        *);;

        // добавление узлов в ответ
        -> _proc_search_of_sets_new_2_operator01 (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_const: rrel_1;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator02;;
        *);;

        -> _proc_search_of_sets_new_2_operator02 (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_const: rrel_2;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator03;;
        *);;

        -> _proc_search_of_sets_new_2_operator03 (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _setFirst;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator04;;
        *);;

        -> _proc_search_of_sets_new_2_operator04 (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _setSecond;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator1;;
        *);;

        -> _proc_search_of_sets_new_2_operator1 (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _nrel;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator2;;
        *);;

        // создание множества связок
        -> _proc_search_of_sets_new_2_operator2 (*
            <- genEl;;
            -> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _set_tuples;;
            => nrel_goto: _proc_search_of_sets_new_2_operator3;;
        *);;

        // формируем множество связок
        // если все хорошо, ищем первую попавшуюся
        -> _proc_search_of_sets_new_2_operator3 (*
            <- searchSetStr5;;
            -> rrel_1: rrel_assign: rrel_node: rrel_const: rrel_scp_var: _el;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arcs2;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _setFirst;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arcs;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

            -> rrel_set_1: rrel_fixed: rrel_scp_var: _set_tuples;;

            => nrel_then: _proc_search_of_sets_new_2_operator4;;
            => nrel_else: _proc_search_of_sets_new_2_operator13A;;
        *);;

        -> _proc_search_of_sets_new_2_operator4 (*
            <- searchElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _set_tuples;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
            -> rrel_3: rrel_assign: rrel_scp_var: _swiazka;;

            => nrel_then: _proc_search_of_sets_new_2_operator8;;
            => nrel_else: _proc_search_of_sets_new_2_operator13A;;
        *);;

        -> _proc_search_of_sets_new_2_operator8 (*
            <- eraseEl;;
            -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _arc;;
            => nrel_goto: _proc_search_of_sets_new_2_operator10;;
        *);;

        // если не нашли множество с атрибутом rrel_2, то это не связка
       	// ищем дальше
        -> _proc_search_of_sets_new_2_operator10 (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_temp;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _setSecond;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arcswhu;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

            => nrel_then: _proc_search_of_sets_new_2_operator12;;
            => nrel_else: _proc_search_of_sets_new_2_operator4;;
        *);;

        -> _proc_search_of_sets_new_2_operator12 (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_scp_var: rrel_assign: _set3;;
            -> rrel_4: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_var: _nrel;;

            => nrel_then: _proc_search_of_sets_new_2_operator_add_answer;;
            => nrel_else: _proc_search_of_sets_new_2_operator4;;
        *);;

        -> _proc_search_of_sets_new_2_operator_add_answer (*
            <- searchSetStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcdwiu;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _setFirst;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arcswhu;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

            -> rrel_set_2: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_set_4: rrel_fixed: rrel_scp_var: _result;;

            => nrel_goto: _proc_search_of_sets_new_2_operator_add_answer1;;
        *);;

        -> _proc_search_of_sets_new_2_operator_add_answer1 (*
            <- searchSetStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcdwiu;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _setSecond;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arcswhu;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

            -> rrel_set_2: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_set_4: rrel_fixed: rrel_scp_var: _result;;

            => nrel_goto: _proc_search_of_sets_new_2_operator12B;;
        *);;

        -> _proc_search_of_sets_new_2_operator12B (*
            <- searchSetStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _set3;;
            -> rrel_4: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arcdwiu;;
            -> rrel_5: rrel_fixed: rrel_scp_var: _nrel;;

            -> rrel_set_2: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_set_4: rrel_fixed: rrel_scp_var: _result;;

            => nrel_goto: _proc_search_of_sets_new_2_operator12C;;
        *);;

        -> _proc_search_of_sets_new_2_operator12C (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _adwrc2;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _swiazka;;
           
            => nrel_goto: _proc_search_of_sets_new_2_operator12D;;
        *);;

        -> _proc_search_of_sets_new_2_operator12D (*
            <- genElStr3;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _result;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _adwrc2;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _set3;;
           
            => nrel_goto: _proc_search_of_sets_new_2_operator_return;;
        *);;

/// начало генераций
        -> _proc_search_of_sets_new_2_operator13A (*
            <- genEl;;
            -> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: rrel_tuple: _swiazka;;

            => nrel_goto: _proc_search_of_sets_new_2_operator13B;;
        *);;

        -> _proc_search_of_sets_new_2_operator13B (*
            <- genElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_var: rrel_node: rrel_const: _setFirst;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator13C;;
        *);;

        -> _proc_search_of_sets_new_2_operator13C (*
            <- genElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arcfnwuei;;
            -> rrel_3: rrel_fixed: rrel_scp_var: rrel_node: rrel_const: _setSecond;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;
            
            => nrel_goto: _proc_search_of_sets_new_2_operator14;;
        *);;

        -> _proc_search_of_sets_new_2_operator14 (*
            <- genElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _swiazka;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_scp_var: rrel_assign: rrel_node: rrel_const: _set3;;
            -> rrel_4: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_var: _nrel;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20A;;
        *);;

///===============================================
/// новая версия ostis
/// нахождение ссылок
        -> _proc_search_of_sets_new_2_operator20A (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _setFirst;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_scp_var: rrel_assign: _link_set1;;
            -> rrel_4: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20A1;;
        *);;

       -> _proc_search_of_sets_new_2_operator20A1 (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _setSecond;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_scp_var: rrel_assign: _link_set2;;
            -> rrel_4: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20A2;;
        *);;

        -> _proc_search_of_sets_new_2_operator20A2 (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _nrel;;
            -> rrel_2: rrel_scp_var: rrel_assign: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_scp_var: rrel_assign: _link_nrel;;
            -> rrel_4: rrel_scp_var: rrel_assign: rrel_pos_const_perm: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20A3;;
        *);;

/// нахождение длины строки
        -> _proc_search_of_sets_new_2_operator20A3 (*
            <- stringLen;;
            -> rrel_1: rrel_assign: rrel_scp_var: _length;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_nrel;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20B;;
        *);;

/// уменьшаем, чтобы не вышло за пределы
        -> _proc_search_of_sets_new_2_operator20B (*
            <- contSub;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _length;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _length;;
            -> rrel_3: rrel_fixed: rrel_scp_const: [1];;

            => nrel_goto: _proc_search_of_sets_new_2_operator20C;;
        *);;

/// выделяем подстроку
        -> _proc_search_of_sets_new_2_operator20C (*
            <- stringSlice;;
            -> rrel_1: rrel_assign: rrel_scp_var: _link_name_not_nrel;; // название отношения без nrel
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_nrel;;  // отношение
            -> rrel_3: rrel_fixed: rrel_scp_const: [5];;
            -> rrel_4: rrel_fixed: rrel_scp_var: _length;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20D;;
        *);;

/// добавление _
        -> _proc_search_of_sets_new_2_operator20D (*
            <- contStringConcat;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_3: rrel_fixed: rrel_scp_const: [_];;

            => nrel_goto: _proc_search_of_sets_new_2_operator20E;;
        *);;

/// добавление 1-го множества
        -> _proc_search_of_sets_new_2_operator20E (*
            <- contStringConcat;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _link_set1;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20F;;
        *);;

/// добавление _
        -> _proc_search_of_sets_new_2_operator20F (*
            <- contStringConcat;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_3: rrel_fixed: rrel_scp_const: [_];;

            => nrel_goto: _proc_search_of_sets_new_2_operator20G;;
        *);;

/// добавление 2-го множества
        -> _proc_search_of_sets_new_2_operator20G (*
            <- contStringConcat;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _link_set2;;

            => nrel_goto: _proc_search_of_sets_new_2_operator20;;
        *);;
        
        -> _proc_search_of_sets_new_2_operator20 (*
            <- genElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _set3;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_const: _arc2;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _link_name_not_nrel;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;

            => nrel_goto: _proc_search_of_sets_new_2_operator21;;
        *);;

///===============================================
		-> _proc_search_of_sets_new_2_operator21 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_search_idtf;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _nrel;;
                -> rrel_2: rrel_assign: rrel_scp_var: _link_nrel_en;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument;;
            => nrel_goto: _proc_search_of_sets_new_2_operator22;;
        *);;

        -> _proc_search_of_sets_new_2_operator22 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument;;
            => nrel_goto: _proc_search_of_sets_new_2_operator22A;;
        *);;

		/// нахождение длины строки
        -> _proc_search_of_sets_new_2_operator22A (*
            <- stringLen;;
            -> rrel_1: rrel_assign: rrel_scp_var: _length_link_nrel_en;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_nrel_en;;

            => nrel_goto: _proc_search_of_sets_new_2_operator22B;;
        *);;

		/// обрезаем звездочку
        -> _proc_search_of_sets_new_2_operator22B (*
            <- contSub;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _length_link_nrel_en;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _length_link_nrel_en;;
            -> rrel_3: rrel_fixed: rrel_scp_const: [2];;

            => nrel_goto: _proc_search_of_sets_new_2_operator22C;;
        *);;

		/// выделяем подстроку
        -> _proc_search_of_sets_new_2_operator22C (*
            <- stringSlice;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _link_nrel_en;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _link_nrel_en;;
            -> rrel_3: rrel_fixed: rrel_scp_const: [0];;
            -> rrel_4: rrel_fixed: rrel_scp_var: _length_link_nrel_en;;

            => nrel_goto: _proc_search_of_sets_new_2_operator22C_print;;
        *);;

        -> _proc_search_of_sets_new_2_operator22C_print (*
            <- printNl;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _link_nrel_en;;
           
            => nrel_goto: _proc_search_of_sets_new_2_operator23;;
        *);;

		-> _proc_search_of_sets_new_2_operator23 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_generation_links;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _setFirst;;
                -> rrel_2: rrel_fixed: rrel_scp_var: _setSecond;;
                -> rrel_3: rrel_fixed: rrel_scp_var: _set3;;
                -> rrel_4: rrel_fixed: rrel_scp_var: _link_nrel_en;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument;;
            => nrel_goto: _proc_search_of_sets_new_2_operator24;;
        *);;

        -> _proc_search_of_sets_new_2_operator24 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument;;
            => nrel_goto: _proc_search_of_sets_new_2_operator25;;
        *);;

        // создание ссылки
        -> _proc_search_of_sets_new_2_operator25 (*
            <- contAssign;;
            -> rrel_1: rrel_assign: rrel_scp_var: _ligament;;
            -> rrel_2: rrel_fixed: rrel_scp_const: [ligament];;

            => nrel_goto: _proc_search_of_sets_new_2_operator25_print;;
        *);;

         // создание ссылки
        -> _proc_search_of_sets_new_2_operator25_print (*
            <- printNl;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _ligament;;

            => nrel_goto: _proc_search_of_sets_new_2_operator26;;
        *);;
 
        -> _proc_search_of_sets_new_2_operator26 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_generation_links;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _setFirst;;
                -> rrel_2: rrel_fixed: rrel_scp_var: _setSecond;;
                -> rrel_3: rrel_fixed: rrel_scp_var: _swiazka;;
                -> rrel_4: rrel_fixed: rrel_scp_var: _ligament;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument;;
            => nrel_goto: _proc_search_of_sets_new_2_operator27;;
        *);;

        -> _proc_search_of_sets_new_2_operator27 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument;;
            => nrel_goto: _proc_search_of_sets_new_2_operator_add_answer;;
        *);;

        -> _proc_search_of_sets_new_2_operator_return (*
            <- return;;
        *);;
    *);;
*);;
*];;