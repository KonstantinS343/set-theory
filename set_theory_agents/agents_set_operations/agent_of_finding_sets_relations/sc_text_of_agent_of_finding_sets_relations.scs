sc_text_of_agent_of_finding_sets_relations
-> rrel_key_sc_element:
	agent_of_finding_sets_relations;
<- scp_program_sc_text;;

sc_text_of_agent_of_finding_sets_relations = [*
agent_of_finding_sets_relations
=> nrel_main_idtf:
	[агентная scp-программа поиска взаимоотношений множеств] 
	(* <- lang_ru;; *);

	[agent scp-program of finding sets' relations] 
	(* <- lang_en;; *);

<- agent_scp_program;;

scp_program -> agent_of_finding_sets_relations 
	(*
	-> rrel_params: ..agent_of_finding_sets_relations_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	->rrel_operators: ..agent_of_finding_sets_relations_operator_set (*

		->rrel_init: _agent_of_finding_sets_relations_operator1 (*
			<- searchElStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator2;;
		*);;

		-> _agent_of_finding_sets_relations_operator2 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: question_finding_sets_relations;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;
			=>nrel_then: _agent_of_finding_sets_relations_operator3;;
			=>nrel_else: _agent_of_finding_sets_relations_operator_return;;
		*);;
		// Найдём параметры операции – их подал на вход сам пользователь
		-> _agent_of_finding_sets_relations_operator3 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _param;;
			-> rrel_set_3: rrel_assign: rrel_scp_var: _not_ch;;
			=>nrel_then: _agent_of_finding_sets_relations_operator31;;
			=>nrel_else: _agent_of_finding_sets_relations_operator_return;;
		*);;
		-> _agent_of_finding_sets_relations_operator31 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _not_ch;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _param1;;
			=>nrel_then: _agent_of_finding_sets_relations_operator320;;
			=>nrel_else: _agent_of_finding_sets_relations_operator_return;;
		*);;
		->_agent_of_finding_sets_relations_operator320
			(*
			<- eraseEl;;
		 	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc1;;
                 	=> nrel_goto: _agent_of_finding_sets_relations_operator32;;
			*);;
		-> _agent_of_finding_sets_relations_operator32 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _not_ch;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _param2;;
			=>nrel_then: _agent_of_finding_sets_relations_operator4;;
			=>nrel_else: _agent_of_finding_sets_relations_operator_return;;
		*);;
		// Сгенерировать узел, в который мы поместим конструкцию ответа
		-> _agent_of_finding_sets_relations_operator4 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _answer;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator5;;
		*);;
		-> _agent_of_finding_sets_relations_operator5 (*
			<- call;; // В первом параметре содержится название вызванной процедуры
			-> rrel_1: rrel_fixed: rrel_scp_const:  proc_of_finding_sets_relations ;;
			->rrel_2:rrel_fixed:rrel_scp_const: // здесь описаны параметры, подаваемые на
			// вход процедуре
			_agent_of_finding_sets_relations_operator5_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _param1;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _param2;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
			*);;
			// Знак scp-процесса, который может быть использован для того, чтобы
			// дождаться завершения созданного scp-процесса
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator6;;
		*);;
		// scp-оператор ожидания завершения выполнения программы
		-> _agent_of_finding_sets_relations_operator6 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator7;;
		*);;

		-> _agent_of_finding_sets_relations_operator7 (*
			<- call;; // В первом параметре содержится название вызванной процедуры
			-> rrel_1: rrel_fixed: rrel_scp_const:  proc_add_set;;
			->rrel_2:rrel_fixed:rrel_scp_const: // здесь описаны параметры, подаваемые на
			// вход процедуре
			_agent_of_finding_sets_relations_operator7_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _param1;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _param2;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
			*);;
			// Знак scp-процесса, который может быть использован для того, чтобы
			// дождаться завершения созданного scp-процесса
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator8;;
		*);;
		// scp-оператор ожидания завершения выполнения программы
		-> _agent_of_finding_sets_relations_operator8 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator_gen_answer;;
		*);;

		// Добавляем узел с конструкцией ответа
		-> _agent_of_finding_sets_relations_operator_gen_answer (*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;
			=>nrel_goto: _agent_of_finding_sets_relations_operator_return;;
		*);;
		// Оператор завершения агентной операции
		-> _agent_of_finding_sets_relations_operator_return (*
			<- return;;
		*);;
	*);;
*);;
*];;